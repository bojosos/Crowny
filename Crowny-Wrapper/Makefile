# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug_win64
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
INCLUDES += -I../Crowny/Source -ISource -I../Crowny/Dependencies/glm
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug_win64)
TARGETDIR = ../bin/Debug-linux-x86_64/Crowny-Wrapper
TARGET = $(TARGETDIR)/libCrowny-Wrapper.so
OBJDIR = ../bin-int/Debug-linux-x86_64/Crowny-Wrapper/Win64
DEFINES += -DCW_DEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -fPIC -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -fPIC -g -std=c++17
LIBS += ../bin/Debug-windows-x86_64/Crowny/Crowny.lib
LDDEPS += ../bin/Debug-windows-x86_64/Crowny/Crowny.lib
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -shared -Wl,-soname=libCrowny-Wrapper.so

else ifeq ($(config),debug_linux64)
TARGETDIR = ../bin/Debug-linux-x86_64/Crowny-Wrapper
TARGET = $(TARGETDIR)/libCrowny-Wrapper.so
OBJDIR = ../bin-int/Debug-linux-x86_64/Crowny-Wrapper/Linux64
DEFINES += -DCW_DEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -fPIC -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -fPIC -g -std=c++17
LIBS += ../bin/Debug-linux-x86_64/Crowny/libCrowny.a
LDDEPS += ../bin/Debug-linux-x86_64/Crowny/libCrowny.a
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -shared -Wl,-soname=libCrowny-Wrapper.so

else ifeq ($(config),debug_macos64)
TARGETDIR = ../bin/Debug-linux-x86_64/Crowny-Wrapper
TARGET = $(TARGETDIR)/libCrowny-Wrapper.so
OBJDIR = ../bin-int/Debug-linux-x86_64/Crowny-Wrapper/MacOS64
DEFINES += -DCW_DEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -fPIC -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -fPIC -g -std=c++17
LIBS += ../bin/Debug-macosx-x86_64/Crowny/libCrowny.a
LDDEPS += ../bin/Debug-macosx-x86_64/Crowny/libCrowny.a
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -shared -Wl,-soname=libCrowny-Wrapper.so

else ifeq ($(config),debug_web)
TARGETDIR = ../bin/Debug-linux-x86_64/Crowny-Wrapper
TARGET = $(TARGETDIR)/libCrowny-Wrapper.so
OBJDIR = ../bin-int/Debug-linux-x86_64/Crowny-Wrapper/Web
DEFINES += -DCW_DEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -fPIC -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -fPIC -g -std=c++17
LIBS += ../bin/Debug-linux-x86_64/Crowny/libCrowny.a
LDDEPS += ../bin/Debug-linux-x86_64/Crowny/libCrowny.a
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -shared -Wl,-soname=libCrowny-Wrapper.so

else ifeq ($(config),release_win64)
TARGETDIR = ../bin/Release-linux-x86_64/Crowny-Wrapper
TARGET = $(TARGETDIR)/libCrowny-Wrapper.so
OBJDIR = ../bin-int/Release-linux-x86_64/Crowny-Wrapper/Win64
DEFINES += -DCW_RELEASE
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fPIC
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fPIC -std=c++17
LIBS += ../bin/Release-windows-x86_64/Crowny/Crowny.lib
LDDEPS += ../bin/Release-windows-x86_64/Crowny/Crowny.lib
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -shared -Wl,-soname=libCrowny-Wrapper.so -s

else ifeq ($(config),release_linux64)
TARGETDIR = ../bin/Release-linux-x86_64/Crowny-Wrapper
TARGET = $(TARGETDIR)/libCrowny-Wrapper.so
OBJDIR = ../bin-int/Release-linux-x86_64/Crowny-Wrapper/Linux64
DEFINES += -DCW_RELEASE
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fPIC
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fPIC -std=c++17
LIBS += ../bin/Release-linux-x86_64/Crowny/libCrowny.a
LDDEPS += ../bin/Release-linux-x86_64/Crowny/libCrowny.a
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -shared -Wl,-soname=libCrowny-Wrapper.so -s

else ifeq ($(config),release_macos64)
TARGETDIR = ../bin/Release-linux-x86_64/Crowny-Wrapper
TARGET = $(TARGETDIR)/libCrowny-Wrapper.so
OBJDIR = ../bin-int/Release-linux-x86_64/Crowny-Wrapper/MacOS64
DEFINES += -DCW_RELEASE
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fPIC
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fPIC -std=c++17
LIBS += ../bin/Release-macosx-x86_64/Crowny/libCrowny.a
LDDEPS += ../bin/Release-macosx-x86_64/Crowny/libCrowny.a
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -shared -Wl,-soname=libCrowny-Wrapper.so -s

else ifeq ($(config),release_web)
TARGETDIR = ../bin/Release-linux-x86_64/Crowny-Wrapper
TARGET = $(TARGETDIR)/libCrowny-Wrapper.so
OBJDIR = ../bin-int/Release-linux-x86_64/Crowny-Wrapper/Web
DEFINES += -DCW_RELEASE
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fPIC
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fPIC -std=c++17
LIBS += ../bin/Release-linux-x86_64/Crowny/libCrowny.a
LDDEPS += ../bin/Release-linux-x86_64/Crowny/libCrowny.a
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -shared -Wl,-soname=libCrowny-Wrapper.so -s

else ifeq ($(config),dist_win64)
TARGETDIR = ../bin/Dist-linux-x86_64/Crowny-Wrapper
TARGET = $(TARGETDIR)/libCrowny-Wrapper.so
OBJDIR = ../bin-int/Dist-linux-x86_64/Crowny-Wrapper/Win64
DEFINES += -DCW_DIST
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fPIC
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fPIC -std=c++17
LIBS += ../bin/Dist-windows-x86_64/Crowny/Crowny.lib
LDDEPS += ../bin/Dist-windows-x86_64/Crowny/Crowny.lib
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -shared -Wl,-soname=libCrowny-Wrapper.so -s

else ifeq ($(config),dist_linux64)
TARGETDIR = ../bin/Dist-linux-x86_64/Crowny-Wrapper
TARGET = $(TARGETDIR)/libCrowny-Wrapper.so
OBJDIR = ../bin-int/Dist-linux-x86_64/Crowny-Wrapper/Linux64
DEFINES += -DCW_DIST
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fPIC
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fPIC -std=c++17
LIBS += ../bin/Dist-linux-x86_64/Crowny/libCrowny.a
LDDEPS += ../bin/Dist-linux-x86_64/Crowny/libCrowny.a
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -shared -Wl,-soname=libCrowny-Wrapper.so -s

else ifeq ($(config),dist_macos64)
TARGETDIR = ../bin/Dist-linux-x86_64/Crowny-Wrapper
TARGET = $(TARGETDIR)/libCrowny-Wrapper.so
OBJDIR = ../bin-int/Dist-linux-x86_64/Crowny-Wrapper/MacOS64
DEFINES += -DCW_DIST
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fPIC
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fPIC -std=c++17
LIBS += ../bin/Dist-macosx-x86_64/Crowny/libCrowny.a
LDDEPS += ../bin/Dist-macosx-x86_64/Crowny/libCrowny.a
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -shared -Wl,-soname=libCrowny-Wrapper.so -s

else ifeq ($(config),dist_web)
TARGETDIR = ../bin/Dist-linux-x86_64/Crowny-Wrapper
TARGET = $(TARGETDIR)/libCrowny-Wrapper.so
OBJDIR = ../bin-int/Dist-linux-x86_64/Crowny-Wrapper/Web
DEFINES += -DCW_DIST
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fPIC
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fPIC -std=c++17
LIBS += ../bin/Dist-linux-x86_64/Crowny/libCrowny.a
LDDEPS += ../bin/Dist-linux-x86_64/Crowny/libCrowny.a
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -shared -Wl,-soname=libCrowny-Wrapper.so -s

endif

# Per File Configurations
# #############################################


# File sets
# #############################################


# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking Crowny-Wrapper
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning Crowny-Wrapper
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) rmdir /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif